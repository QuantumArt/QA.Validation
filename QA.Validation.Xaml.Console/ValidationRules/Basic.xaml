<XamlObjectValidator
    xmlns="http://artq.com/validation"
    xmlns:model="clr-namespace: QA.Validation.Xaml.Console;assembly=QA.Validation.Xaml.Console"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace: System;assembly=mscorlib"
    Type="{x:Type model:Person}">
    <!--описание полей-->
    <XamlObjectValidator.Definitions>
        <PropertyDefinition Alias="Name" PropertyName="Name" PropertyType="{x:Type x:String}"/>
        <PropertyDefinition Alias="DuplicateName" PropertyName="DuplicateName" PropertyType="{x:Type x:String}"/>
    </XamlObjectValidator.Definitions>

    <!-- Заполнение поля ValidationRules (оно указано как ContentProperty)-->
    
    <!--применение правила к свойству (к полю)
        Если поле Name имеет значение null, то выводится ошибка "Не может быть null"
    -->
    <ForMember Definition="{x:Definition Name}">
        <If>
            <IsNull />
            <If.True>
                <WithLocalizedMessage>
                    <sys:String x:Key="ru-ru">234</sys:String>
                </WithLocalizedMessage>
            </If.True>
        </If>
    </ForMember>
    
    <ForMember Definition="{x:Definition Name}">
        <If True="{x:DynamicResource Name=Messages,Key=msg_Required}">
            <!--установка свойства Condition (оно указано как ContentProperty)-->
            <IsNull  />            
        </If>
    </ForMember>

    <!--применение правила к свойству (к полю)
        Пример обратного синтаксиса: 
            Поле DuplicateName обязательно для заполнения, если поле Name не пустое
        Пример приведения типов: полю Message класса RequiredIf устанавливается объект типа WithMessage-->
    <ForMember Definition="{x:Definition DuplicateName}">
        <RequiredIf Message="Обязательно для заполнения.">
            <Not>
                <IsNullOrEmpty Source="{x:Definition Name}" />
            </Not>
        </RequiredIf>
    </ForMember>
    
    <!--применение правила ко всему объекту
        Если значения полей Name и DuplicateName не совпадают, 
            то выводится локализованное сообщение-->
    <Must>
        <If>
            <AreEqual Source="{x:Definition Name}" Target="{x:Definition DuplicateName}" />
            <If.False>
                <!--поддержка локализации сообщений-->
                <WithLocalizedMessage Text="Имя и повтор имени должны совпадать (default culture)">
                    <sys:String x:Key="ru-ru">Имя и повтор имени должны совпадать</sys:String>
                    <sys:String x:Key="en-us">Must be equal.</sys:String>
                </WithLocalizedMessage>
            </If.False>
        </If>
    </Must>
</XamlObjectValidator>